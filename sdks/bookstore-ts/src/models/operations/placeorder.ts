/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components/index.js";
import * as z from "zod";

export type PlaceOrderResponse = components.ErrorT | components.Order;

/** @internal */
export const PlaceOrderResponse$inboundSchema: z.ZodType<
    PlaceOrderResponse,
    z.ZodTypeDef,
    unknown
> = z.union([components.ErrorT$inboundSchema, components.Order$inboundSchema]);

/** @internal */
export type PlaceOrderResponse$Outbound = components.ErrorT$Outbound | components.Order$Outbound;

/** @internal */
export const PlaceOrderResponse$outboundSchema: z.ZodType<
    PlaceOrderResponse$Outbound,
    z.ZodTypeDef,
    PlaceOrderResponse
> = z.union([components.ErrorT$outboundSchema, components.Order$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PlaceOrderResponse$ {
    /** @deprecated use `PlaceOrderResponse$inboundSchema` instead. */
    export const inboundSchema = PlaceOrderResponse$inboundSchema;
    /** @deprecated use `PlaceOrderResponse$outboundSchema` instead. */
    export const outboundSchema = PlaceOrderResponse$outboundSchema;
    /** @deprecated use `PlaceOrderResponse$Outbound` instead. */
    export type Outbound = PlaceOrderResponse$Outbound;
}
