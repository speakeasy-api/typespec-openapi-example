/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    OrderStatus,
    OrderStatus$inboundSchema,
    OrderStatus$outboundSchema,
} from "./orderstatus.js";
import {
    Publication,
    Publication$inboundSchema,
    Publication$Outbound,
    Publication$outboundSchema,
} from "./publication.js";
import * as z from "zod";

/**
 * Represents an order for publications
 */
export type Order = {
    /**
     * Unique identifier for the order
     */
    id: string;
    /**
     * Customer who placed the order
     */
    customerId: string;
    /**
     * List of publications in the order
     */
    items: Array<Publication>;
    /**
     * Total price of the order
     */
    totalPrice: number;
    /**
     * Status of the order
     */
    status: OrderStatus;
};

/** @internal */
export const Order$inboundSchema: z.ZodType<Order, z.ZodTypeDef, unknown> = z.object({
    id: z.string(),
    customerId: z.string(),
    items: z.array(Publication$inboundSchema),
    totalPrice: z.number(),
    status: OrderStatus$inboundSchema,
});

/** @internal */
export type Order$Outbound = {
    id: string;
    customerId: string;
    items: Array<Publication$Outbound>;
    totalPrice: number;
    status: string;
};

/** @internal */
export const Order$outboundSchema: z.ZodType<Order$Outbound, z.ZodTypeDef, Order> = z.object({
    id: z.string(),
    customerId: z.string(),
    items: z.array(Publication$outboundSchema),
    totalPrice: z.number(),
    status: OrderStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Order$ {
    /** @deprecated use `Order$inboundSchema` instead. */
    export const inboundSchema = Order$inboundSchema;
    /** @deprecated use `Order$outboundSchema` instead. */
    export const outboundSchema = Order$outboundSchema;
    /** @deprecated use `Order$Outbound` instead. */
    export type Outbound = Order$Outbound;
}
